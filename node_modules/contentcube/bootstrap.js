var FileSystem = require("contentcube/filesystem");
var Path = require("path");
var Step = require("step");

/**
 * Bootstrapper this will search all modules for a bootstrap.js file placed in the root of the concrete module folder.
 * If found it will load and execute it. 
 */
exports.bootstrapModuleDirectory = function (modulesPath, callback) {
	Step(
		function getModules() {
			FileSystem.readdir(modulesPath, this);
		},
		function fileListReceived(error, fileNames) {
			if (error) throw error;

			var group = this.group();
			// gather file infomation from all the files.
			fileNames.forEach(function(filename) {
				var moduleDirectoryPath = Path.join(modulesPath, filename);
				FileSystem.stat(moduleDirectoryPath, group());
			});
		},
		// from all the file infomation received. filter out directories that contain a bootstrap.js file.
		function fileStatReceived(error, fileStats) {
			if (error) throw error;
			
			var callback = this;
			var bootstrapFilePaths = [];
			
			function checkForBootstrapFileExistence() {
				if (fileStats.length <= 0) {
					callback(null, bootstrapFilePaths);
					return;
				}

				var file = fileStats.pop();
				if (!file.isDirectory()) {
					checkForBootstrapFileExistence();
				}
				var modulePath = file.filepath;

				var bootstrapFilePath = Path.join(modulePath, 'bootstrap.js');
				Path.exists(bootstrapFilePath, function(exists) {
					if (exists) {
						bootstrapFilePaths.push(bootstrapFilePath);
					}

					checkForBootstrapFileExistence();
				});
			}

			checkForBootstrapFileExistence();
		},
		// load and execute all found bootstrap files.
		function executeBootstraps(error, bootstrapPaths) {
			if (error) throw error;
			
			bootstrapPaths.forEach(function(bootstrapPath) {
				var bootstrap = require(bootstrapPath);
				bootstrap();
				console.log("initialized: " + bootstrapPath);
			});
			
			callback(error);
		}	
	);
};

