var ejs = require("ejs");
var fileSystem = require("fs");
var path = require("path");

module.exports = function(request) {
	var instance = {};
	
	instance.placeholder = function(key) {	
		var placeholder = request.placeholder(key);
		
		return {
			get: function(key, defaultValue) {
				if (!key) {
					return placeholder;
				}
				
				return placeholder[key] || defaultValue;
			},
			set: function(key, value) {
				placeholder[key] = value;
			}
		};
	};
	
	instance.renderView = function(viewName, viewData) {
		
		var filepath = path.resolve('./application/views/' + viewName);
		var fileContent = fileSystem.readFileSync(filepath, 'UTF8');
		var html = ejs.render(fileContent, {locals: viewData});
		
		return html;
	};
	
	instance.layout = (function() {
		// store in placeholder instead?.
		var mScripts = [];
		var mStyles = [];
		
		var layoutHelper = {
			title: '',
			
			addScript: function(url) {
				if (mScripts.indexOf(url) == -1) {
					mScripts.push(url);
				}
			},
			getScripts: function() {
				var html = [];
				mScripts.forEach(function(url) {
					html.push('<script type="text/javascript" src="' + url + '"></script>');
				});
				
				return html.join("\n");
			},
			addStyle: function(url) {
				if (mStyles.indexOf(url) == -1) {
					mStyles.push(url);
				}
			},
			getStyles: function() {
				var html = [];
				mStyles.forEach(function(url) {
					html.push('<link rel="stylesheet" type="text/css" href="' + url + '" media="all" />');
				});
				
				return html.join("\n");
			}
		};
		
		return layoutHelper;
	})();
	
	return instance;
};





// _helpers.render('pages/partial.mads.ejs', {});