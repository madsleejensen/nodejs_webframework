var Path = require("path");
var Step = require("step");

module.exports = function(application) {
	var instance = {};
	
	/**
	 * Enter a dispatch loop will continue to handle requests till request.isDispatched() is marked `true`.
	 * @param {contentcube/request} request
	 * @param {contentcube/response} response
	 * @param {Function} callback 
	 */
	instance.dispatch = function(request, response, callback) {
		
		(function loop(callback) {
			Step(
				function initializeController() {
					loadController(this);
				},
				function runActionOnController(error, controller) {
					if (error) throw error;
					request.setDispatched(true);
					controller.handle(request.actionName, this);
				},
				function onActionHandled(error) {	
					if (error) {
						if (error.family == 'contentcube' && request.controllerName != 'error') { // prevent it from going into a infinite loop.
							request.controllerName = "error";
							request.actionName = "error";
							request.moduleName = application.getConfig('routing.defaultModuleName');
							request.setParams([error]);

							return loop(callback);
						}

						return callback(error);
					}

					if (!request.isDispatched()) {
						loop(callback);
					}
					else {
						callback();
					}
				}
			);
		})(callback);
		
		/**
		 * finds an instantiates a controller by name.
		 * @param {String} controllerName
	     * @param {Function} callback
		 */
		function loadController(callback) {
			var pathToController = '/application/controllers/' + request.controllerName + '.js';
			
			if (application.getConfig('system.modulesEnabled', false)) {
				pathToController = '/application/modules/' + request.moduleName + '/controllers/' + request.controllerName + '.js';
			}
			
			var filepath = Path.join(application.getConfig('system.localPath'), Path.normalize(pathToController));
			
			Path.exists(filepath, function(exists) {
				if (exists) {
					var ControllerCreator = require(filepath);
					var controller = ControllerCreator(application, request, response);
					callback(null, controller);
				}
				else {
					var error = new Error("Cannot find controller file for " + request.controllerName + " looked in " + filepath);
						error.type = "ERROR_NO_CONTROLLER_FOUND";
						error.family = 'contentcube';
						error.code = 404;

					callback(error);
				}
			});	
		}
	};
	
	return instance;
};