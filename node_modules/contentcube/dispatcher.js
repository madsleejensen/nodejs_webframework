var path = require("path");
var fileSystem = require("fs");
var Step = require("step");

module.exports = function(application) {
	
	var instance = {};
		
	// Enter a dispatch loop will continue to handle request till request.isDispatched is marked.
	instance.dispatch = function(request, response, callback) {
		
		(function loop(callback) {
			Step(
				function initializeController() {
					getController(request.controllerName, this);
				},
				function runActionOnController(error, controller) {
					if (error) throw error;
					request.setDispatched(true);
					controller.handle(request.actionName, this);
				},
				function onActionHandled(error) {	

					if (error) {
						if (error.family == 'contentcube' && request.controllerName != 'error') { // prevent it from going into a infinite loop.
							request.controllerName = "error";
							request.actionName = "errorAction";
							request.setParams([error]);

							return loop(callback);
						}

						return callback(error);
					}

					if (!request.isDispatched()) {
						loop(callback);
					}
					else {
						callback();
					}
				}
			);
		})(callback);
		
		function getController(controllerName, callback) {
			var filepath = path.resolve("./application/controllers/" + controllerName + ".js");
			console.log(controllerName);
			path.exists(filepath, function(exists) {
				if (exists) {
					var controllerCreator = require(filepath);
					var controller = controllerCreator(application, request, response);
					callback(null, controller);
				}
				else {
					var error = new Error("Cannot find controller file for " + controllerName + " looked in " + filepath);
						error.type = "ERROR_NO_CONTROLLER_FOUND";
						error.family = 'contentcube';
						error.code = 404;

					callback(error);
				}
			});	
		}
	};
	
	return instance;
};