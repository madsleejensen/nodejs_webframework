var Path = require("path");
var Url = require("url");
var FileSystem = require("fs");
var Mime = require("mime");

/**
 * Simple module that attempts to serve static content. It will map HTTP requests into file locations relative to 
 * {root}/public, if a match is found, it will stream the file back as response.
 */
exports.create = function() {
	var instance = {};
	
	instance.handle = function (request, response, callback) {
		if (Path.extname(request.url) == '') {
			callback(null, false); // no extension name in the request meaning client is not requesting a static file.
			return;
		}

		var parts = Url.parse(request.url);
		var filepath = Path.join(application.config.get('system.localPath'), 'public', Path.normalize(parts.pathname));

		FileSystem.stat(filepath, function(error, stat) {
			if (error || !stat.isFile()) {
				callback(null, false); 
			}
			else {
				var readStream = FileSystem.createReadStream(filepath, {
					flags: 'r',
				});

				var contentType = Mime.lookup(filepath, "text/plain");
				response.writeHead(200, {'Content-Type': contentType });

				readStream.pipe(response);
				callback(null, true);
			}
		});
	};
	
	return instance;
};